"""
가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다. 태일이는 이 얇은 바닥을 1 x 2의 덮개, 2 x 1의 덮개, 2 x 2의 덮개를 이용해 채우고자 한다.
이때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오. 예를 들어 2 X 3크기의 바닥을 채우는 경우의 수는 5가지이다.
- 입력 조건
    - 첫째 줄에 N이 주어진다. (1 <= N <= 1000)
- 출력 조건
    - 첫째 줄에 2 X N 크기의 바닥을 채우는 방법의 수를 796796으로 나눈 나머지를 출력한다.
"""
"""
2x1 => 1, 1x2 => 2 2x2 => 2*
d[1] = (1) 1개
d[2] = (1,1) + [(2) + (2*)] 3개
d[3] = (1, 1, 1) + (2,1) + (2*,1) + [(1, 2) + (1, 2*)] 5개
d[4] = (1, 1, 1, 1) + (2,1,1) + (2*,1, 1) + (1, 2, 1) + (1, 2*, 1) + [(1, 1, 2) + (2,2) + (2*, 2) + (1, 1, 2*) + (2, 2*) + (2*, 2*)] 11개
d[5] = d[4]에다가 뒤에 1을 붙인거(11개) + d[3]에다가 2와 2*을 붙인거(5*2 = 10개) 21개
d[6] = d[5]에다가 뒤에 1을 붙인거(21개) + d[4]에다가 2와 2*을 붙인거(11*2 = 22개) 43개
d[n] = d[n-1]에다가 뒤에 1을 붙인거 + d[n-2]에다가 2와 2*을 붙인거 = d[n-1] + 2*d[n-2] 
"""
def tile(N):
    d = [0] * 1001
    d[1] = 1
    d[2] = 3
    for i in range(3, N+1):
        d[i] = d[i-1]+2*d[i-2]
    return d[N]
  
N = int(input())
num = tile(N) % 796796
print(num)

