"""
여행가 A는 N x N 크기의 정사각형 공간 위에 서 있다. 이 공간은 1 X 1 크기의 정사각형으로 나누어져 있다. 가장 왼쪽 위 좌표는 (1, 1)이며,
가장 오른쪽 아래 좌표는 (N, N)에 해당한다. 여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)이다. 우리
앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여 있다.

계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L, R, U, D 중 하나의 문자가 반복적으로 적혀 있다. 각 문자의 의미는 다음과 같다.

L: 왼쪽으로 한 칸 이동, R: 오른쪽으로 한 칸 이동, U: 위로 한 칸 이동, D: 아래로 한 칸 이동

이때 여행가 A가 N x N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다. 예를 들어 (1, 1)의 위치에서 L 혹은 U를 만나면 무시된다.

계획서가 주어졌을 때 여행가 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오.

입력 조건:
    - 첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1 <= N <= 100)
    - 둘째 줄에 여행가 A가 이동할 계획서 내용이 주어진다. (1 <= 이동 횟수 <= 100)

출력 조건: 
    - 첫째 줄에 여행가 A가 최종적ㅇ르로 도착할 지점의 좌표 (X, Y)를 공백으로 구분하여 출력한다.
"""

N = int(input())
move = list(input().split(' '))

# row 리스트 안에 colum이라는 리스트를 추가해 가면서 바둑판을 확장시킨다는 사고로 진행
trip_map = []    # 빈 지도 생성

for number in range(N):
    colum = []  # 빈 행 생성
    for colum_number in range(N):   # 열 추가 (혹시 for을 안쓰고 열을 추가할 방법이 있을까?)
        colum.append(colum_number)
    trip_map.append(colum)  # 행 추가
# print(trip_map)시 [[0, 1, 2, 3, 4],[0, 1, 2, 3, 4],[~],[~],[~]] 형태의 바둑판 구조가 완성이 되었음.

# 이제 각 move 시 어떻게 값을 추가해 나아갈지를 생각해보면 R과 L은 trip_map[r][c +- '1'] 하는 것
# U와 D는 trip_map_row[r -+ '1'][c] 하는 것이라고 생각하면 됨

my_row = 0 # 나의 행위치 0 부터 시작
my_colum = 0 # 나의 열위치 0 부터 시작

for movement in move: # move 리스트 안에 'R', 'L', 'U', 'D'가 순서대로 있고 하나씩 순회
    if movement == 'R': # 오른쪽으로 이동 시
        if my_colum != (N - 1): # 내 열이 (N - 1)인데 R을 해버리면 지도를 벗어나니 무시해야 됨. 리스트 특성상 0부터 시작하니 끝은 (N - 1)인거 주의
            my_colum += 1
        else:
            pass
    elif movement == 'L':
        if my_colum != 0: # 내 열이 0인데 L을 해버리면 지도를 벗어나니 무시해야 됨
            my_colum -= 1
        else:
            pass
    elif movement == 'U':
        if my_row != 0: # 내 행이 0인데 U을 해버리면 지도를 벗어나닌 무시
            my_row -= 1
        else:
            pass
    else :  # 이것은 D의 관한 이야기 이다.
        if my_row != (N - 1):   # # 내 행이 (N - 1)인데 D 해버리면 지도를 벗어나니 무시해야 됨. 리스트 특성상 0부터 시작하니 끝은 (N - 1)인거 주의
            my_row += 1
        else:
            pass

print(f'{my_row + 1} {my_colum + 1}')   # 컴퓨터의 바둑판은 시작점이 (0, 0)인 것을 알아야한다. (문제에서는 시작점을(1, 1)로 했으니 마지막에 대해주는거)